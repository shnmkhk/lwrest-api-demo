/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  application
  // Apply GraalVM Native Image plugin
  id("org.graalvm.buildtools.native") version "0.9.23"
}

graalvmNative {
    toolchainDetection.set(true)
    binaries {
        named("main") {
            mainClass.set("lwrest.api.demo.App")
        }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.1-jre")

    implementation("org.slf4j:slf4j-api:1.7.30")
    implementation("org.slf4j:slf4j-simple:1.7.30")

    implementation("org.eclipse.jetty:jetty-server:9.4.28.v20200408")
    implementation("org.eclipse.jetty:jetty-servlet:9.4.28.v20200408")

    implementation("org.glassfish.jersey.core:jersey-server:2.31")
    implementation("org.glassfish.jersey.containers:jersey-container-servlet-core:2.31")
    implementation("org.glassfish.jersey.containers:jersey-container-jetty-http:2.31")
    implementation("org.glassfish.jersey.media:jersey-media-json-jackson:2.31")
    implementation("org.glassfish.jersey.inject:jersey-hk2:2.31")
    
    implementation("javax.servlet:javax.servlet-api:3.0.1")

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(20))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("lwrest.api.demo.App")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register<Wrapper>("wrapper") {
    gradleVersion = "8.1"
}
